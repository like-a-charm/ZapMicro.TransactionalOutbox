version: '3.7'
services:
  order-service:
    build:
      context: ./../../
      dockerfile: samples/create-order-saga/ZapMicro.TransactionalOutbox.Samples.CreateOrderSaga.OrderService/Dockerfile
    ports:
      - '8000:80'
    environment:
      - 'QUEUE_STORAGE_CONNECTION_STRING=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;QueueEndpoint=http://queues:10001/devstoreaccount1'
      - 'CREATE_ORDER_QUEUE_NAME=create-order-queue'
      - 'PAYMENT_COMPLETED_QUEUE_NAME=payment-completed-queue'
      - 'ORDERS_DATABASE_CONNECTION_STRING=Data Source=database;Initial Catalog=order-service;Password=@_str0nG-p@ssw0rd!;User ID=sa'
    depends_on:
      - database
      - queues
    healthcheck:
      test: curl --fail http://localhost/healthcheck || exit 1
      interval: 60s
      retries: 15
      start_period: 120s
      timeout: 10s
    
  payment-service:
    build:
      context: ./../../
      dockerfile: samples/create-order-saga/ZapMicro.TransactionalOutbox.Samples.CreateOrderSaga.PaymentService/Dockerfile
    ports:
      - '8001:80'
    environment:
      - 'QUEUE_STORAGE_CONNECTION_STRING=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;QueueEndpoint=http://queues:10001/devstoreaccount1'
      - 'CREATE_ORDER_QUEUE_NAME=create-order-queue'
      - 'PAYMENT_COMPLETED_QUEUE_NAME=payment-completed-queue'
      - 'PAYMENTS_DATABASE_CONNECTION_STRING=Data Source=database;Initial Catalog=payment-service;Password=@_str0nG-p@ssw0rd!;User ID=sa'
    depends_on:
      - database
      - queues
    healthcheck:
      test: curl --fail http://localhost/healthcheck || exit 1
      interval: 60s
      retries: 15
      start_period: 120s
      timeout: 10s

  test-runner:
    build:
      context: ./../../
      dockerfile: samples/create-order-saga/ZapMicro.TransactionalOutbox.Samples.CreateOrderSaga.TestRunner/Dockerfile
    environment:
      - 'ORDER_SERVICE_BASE_URL=http://order-service/'
    depends_on:
      order-service:
        condition: service_healthy
      payment-service:
        condition: service_healthy
  
  queues:
    build:
      context: queue
    ports:
      - 9004:10000
      - 9005:10001
    command: "azurite-queue --loose --queueHost 0.0.0.0"
    
  database:
    build:
      context: database
    environment:
      SA_PASSWORD: "@_str0nG-p@ssw0rd!"
      ACCEPT_EULA: "Y"
    ports:
      - 9002:1433